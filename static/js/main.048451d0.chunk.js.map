{"version":3,"sources":["components/Startpage/Startpage.module.scss","components/Sidebar/Sidebar.module.scss","components/Question/Question.module.scss","components/ProgressBar/ProgressBar.module.scss","components/CategorySelection/CategorySelection.module.scss","components/DifficultySelection/DifficultySelection.module.scss","components/QuestionsPage/QuestionsPage.module.scss","components/ShareCard/ShareCard.module.scss","assets/images/question-mark.svg","components/AmountSelection/AmountSelection.module.scss","components/NotAvailable/NotAvailable.module.scss","components/Finished/Finished.module.scss","Actions/types/questions.types.ts","components/ProgressBar/ProgressBar.tsx","components/ShareCard/ShareCard.tsx","components/Sidebar/Sidebar.tsx","components/Startpage/content/selection.content.ts","components/RadioToggle/RadioToggle.tsx","components/CategorySelection/CategorySelection.tsx","components/AmountSelection/AmountSelection.tsx","Actions/selection.action.ts","Actions/types/selection.types.ts","components/DifficultySelection/DifficultySelection.tsx","util.tsx","Actions/isSelectionSuccess.action.ts","Actions/questions.action.ts","components/Startpage/Startpage.tsx","components/Question/Question.tsx","Actions/score.action.ts","Actions/current.action.ts","components/NotAvailable/NotAvailable.tsx","components/QuestionsPage/QuestionsPage.tsx","components/GoBackButton/GoBackButton.tsx","components/Finished/Finished.tsx","App.tsx","Reducers/test/test.reducer.ts","Actions/types/test.action.types.ts","Reducers/questions/questions.reducer.ts","Reducers/questions/selections.reducer.ts","Reducers/questions/isSelectionSuccess.reducer.ts","Reducers/questions/score.reducer.ts","Reducers/questions/current.reducer.ts","Reducers/RootReducer.ts","Store.ts","index.tsx"],"names":["module","exports","Difficulty","SelectionType","ProgressBar","amount","useSelector","state","selection","currentIndex","currentIndexAtQuestion","className","styles","progressBar","current","style","width","total","ShareCard","shareCardContainer","icon","faTwitter","faFacebookF","faLink","Sidebar","props","next","visible","score","container","currentProgress","shareCard","onClick","e","categoriesContent","Items","value","name","difficultiesContent","RadioToggle","callback","items","useState","setState","keys","Object","height","marginRight","map","item","i","key","checked","type","onChange","target","currentTarget","handleClick","CategorySelection","categories","categoriesContainer","category","index","innerText","active","default","AmountSelection","placeholder","userQuestionTypeSelection","param","a","dispatch","payload","error","console","log","DifficultySelection","difficulty","notActive","setQuestionInSession","loading","questions","data","sessionStorage","setItem","JSON","stringify","getQuestionInSession","getItem","parse","isSelectionSuccess","result","SELECTION_SUCCEEDED","fetchQuestions","endpoint","selectionType","Axios","get","results","Startpage","useDispatch","isNotCompleted","setisNotCompleted","undefined","amountSelected","setAmountSelected","categorySelected","setCategorySelected","difficultySelected","setDifficultySelected","typeSelected","setTypeSelected","selectedChallenge","handleSubmitClick","params","isSuccess","query","useEffect","validateInputs","validate","setDataSession","EASY","MEDIUM","HARD","types","typesContainer","MULTIPLE","BOOL","parseInt","button","disabled","to","contentImage","src","QuestionMarkImage","alt","sidebar","Question","answers","question","defaultIndex","setDefaultIndex","dangerouslySetInnerHTML","__html","choices","getAttribute","data-aria","ScoreAction","SAVE_SCORE_SUCCESS","CurrentAction","CURRENT_INDEX","NotAvailable","QuestionsPage","setData","setAnswers","setCurrentIndex","currentCorrectAnswer","setCurrentCorrectAnswer","isDone","setIsDone","currentScore","setCurrentScore","fetchSession","currentIndexDispatch","length","currentQuestion","mapAnswers","correctAnswer","correct_answer","incorrectAnswers","incorrect_answers","done","correct","checkUserAnswer","handleNext","prev","saveTheScore","mapDataQuestions","GoBackButton","link","Finished","App","isSelectionSuccedded","success","exact","path","component","initialState","testReducer","action","testTodos","QuestionsReducer","RootReducer","combineReducers","test","Store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.048451d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Startpage_container__3rrw7\",\"contentImage\":\"Startpage_contentImage__30D77\",\"selection\":\"Startpage_selection__3FLde\",\"categories\":\"Startpage_categories__3ov4o\",\"types\":\"Startpage_types__3Ag7q\",\"typesContainer\":\"Startpage_typesContainer__3JVeX\",\"amount\":\"Startpage_amount__2LdYR\",\"button\":\"Startpage_button__35cb7\",\"sidebar\":\"Startpage_sidebar__3L_Xl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Sidebar_container__1hpU0\",\"score\":\"Sidebar_score__iV_2S\",\"currentProgress\":\"Sidebar_currentProgress__2HCiw\",\"next\":\"Sidebar_next__7pk3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Question_container__EiL89\",\"category\":\"Question_category__3HP2u\",\"choices\":\"Question_choices__3DAlK\",\"active\":\"Question_active__24dNp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressBar\":\"ProgressBar_progressBar__2aJ_-\",\"current\":\"ProgressBar_current__NCPXJ\",\"total\":\"ProgressBar_total__1k7Vq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"categoriesContainer\":\"CategorySelection_categoriesContainer__3YvUO\",\"active\":\"CategorySelection_active__2yRnV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"difficulty\":\"DifficultySelection_difficulty__1Xd9F\",\"active\":\"DifficultySelection_active__3rQdH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"QuestionsPage_container__3kTVi\",\"question\":\"QuestionsPage_question__37IAR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shareCardContainer\":\"ShareCard_shareCardContainer__hAaw5\"};","module.exports = __webpack_public_path__ + \"static/media/question-mark.76e11f1b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AmountSelection_container__3icrV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NotAvailable_container__3OX5K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Finished_container__2Q4PG\"};","export const FETCH_QUESTIONS_FAIL = \"FETCH_QUESTIONS_FAIL\";\r\nexport const FETCH_QUESTIONS_LOADING = \"FETCH_QUESTIONS_LOADING\";\r\nexport const FETCH_QUESTIONS_SUCCESS = \"FETCH_QUESTIONS_SUCCESS\";\r\n\r\nexport interface Fetch_Questions_Fail {\r\n    type: typeof FETCH_QUESTIONS_FAIL\r\n}\r\n\r\nexport interface Fetch_Questions_Loading {\r\n    type: typeof FETCH_QUESTIONS_LOADING\r\n}\r\n\r\nexport interface Fetch_Questions_Success {\r\n    type: typeof FETCH_QUESTIONS_SUCCESS,\r\n    payload: Questions[];\r\n}\r\n\r\n// question types from the api\r\nexport type Questions = {\r\n    category: string,\r\n    correct_answer: string,\r\n    difficulty: Difficulty,\r\n    incorrect_answers: string[],\r\n    question: string,\r\n    type: string\r\n}\r\n\r\n// difficulty enums\r\nexport enum Difficulty {\r\n    EASY = \"easy\",\r\n    MEDIUM = \"medium\",\r\n    HARD = \"hard\"\r\n}\r\n\r\n// selection type\r\nexport enum SelectionType {\r\n    MULTIPLE = \"multiple\",\r\n    BOOL = \"boolean\"\r\n}\r\n\r\n// parameters passed in fetchQuestions Action\r\nexport interface QuestionsParams {\r\n    amount: number | undefined, \r\n    category: number | undefined, \r\n    difficulty: Difficulty | undefined, \r\n    selectionType: SelectionType | undefined\r\n}\r\n\r\nexport type FetchQuestionsDispatchTypes =  Fetch_Questions_Fail | Fetch_Questions_Loading | Fetch_Questions_Success;","import React, { ReactElement } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { RootStore } from '../../Store';\r\nimport styles from './ProgressBar.module.scss';\r\n\r\ninterface IAppProps {}\r\n\r\nconst ProgressBar: React.FC<IAppProps> = (): ReactElement => {\r\n    const {amount} = useSelector((state: RootStore) => state.selection)\r\n    const {currentIndex} = useSelector((state: RootStore) => state.currentIndexAtQuestion);\r\n\r\n    const calculateWidthOfProgress = (totalNumberOfQuestions: number):number => {\r\n        let result = (currentIndex + 1) / amount * 100 // calculating total percentage\r\n        return result\r\n    }\r\n\r\n    return (\r\n        <div className={styles.progressBar}>\r\n            <div className={styles.current} style={{width: `${calculateWidthOfProgress(amount)}%`}}></div>            \r\n            <div className={styles.total}></div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTwitter, faFacebookF } from '@fortawesome/free-brands-svg-icons'\r\nimport { faLink } from '@fortawesome/free-solid-svg-icons'\r\nimport styles from './ShareCard.module.scss';\r\nconst ShareCard = () => {\r\n    return (\r\n        <ul className={styles.shareCardContainer}>\r\n            <li><FontAwesomeIcon icon={faTwitter} />Share on Twitter</li>\r\n            <li><FontAwesomeIcon icon={faFacebookF}/>Share on Facebook</li>\r\n            <li><FontAwesomeIcon icon={faLink}/>Copy link</li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ShareCard\r\n","import React, { ReactElement } from 'react'\r\nimport styles from './Sidebar.module.scss'\r\nimport ProgressBar from '../ProgressBar/ProgressBar';\r\nimport ShareCard from '../ShareCard/ShareCard';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootStore } from '../../Store';\r\n\r\ninterface ISidebarProps {\r\n    next?: Function,\r\n    visible?: boolean | undefined,\r\n    score?: number\r\n}\r\n\r\nconst Sidebar: React.FC<ISidebarProps> = (props): ReactElement => {\r\n    const { next, visible, score } = props;\r\n    const {currentIndex} = useSelector((state: RootStore) => state.currentIndexAtQuestion)\r\n    const {amount} = useSelector((state: RootStore) => state.selection);\r\n\r\n    const handleClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): null | void => {\r\n        if(!next) return;\r\n        next(); // call this callback function to handle next\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.score}>\r\n                <h4>Score</h4>\r\n                <h2>{score ? score : 0}</h2>\r\n            </div>\r\n            <div className={styles.currentProgress}>\r\n                <h4>{`${currentIndex + 1} out of ${amount}`}</h4>\r\n                <ProgressBar/>\r\n            </div>\r\n            <div className={styles.shareCard}>\r\n                <ShareCard/>\r\n            </div>\r\n            <div className={styles.next}>\r\n                <button className={visible ? \"primary-button\" : \"hide\"} onClick={e=>handleClick(e)}>\r\n                    Next Question\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","export const categoriesContent: string[] = [\r\n    \"General Knowledge\",\r\n    \"Entertainment: Books\",\r\n    \"Entertainment: Film\",\r\n    \"Entertainment: Music\",\r\n    \"Entertainment: Musicals & Theatres\",\r\n    \"Entertainment: Television\",\r\n    \"Entertainment: Video Games\",\r\n    \"Entertainment: Board Games\",\r\n    \"Science & Natures\",\r\n    \"Science: Computers\",\r\n    \"Science: Mathematics\",\r\n    \"Methodology\",\r\n    \"Sport\",\r\n    \"Geography\",\r\n    \"History\",\r\n    \"Politics\",\r\n    \"Art\",\r\n    \"Celibrities\",\r\n    \"Animals\",\r\n    \"Vehicles\",\r\n    \"Entertainment: Comics\",\r\n    \"Science: Gadgets\",\r\n    \"Entertainment: Japanese Anime & Manga\",\r\n    \"Entertainment: Cartoon & Animations\",\r\n]\r\n\r\nexport const Items = { //items for radio buttons {must have}\r\n    value: [\"multiple\", \"boolean\"],\r\n    name: [\"Multiple Choice\", \"True or False\"]\r\n}\r\n\r\nexport const difficultiesContent = [\r\n    \"easy\",\r\n    \"medium\",\r\n    \"hard\"\r\n]","import React, { ReactElement, useState } from 'react'\r\n\r\ninterface RadioToggleProps {\r\n    items: ItemsType,\r\n    callback: Function\r\n}\r\n\r\nexport type ItemsType = {\r\n    value: string[],\r\n    name: string[]\r\n}\r\n \r\nexport type INameRadioToggleProp = string;\r\n\r\nconst RadioToggle: React.FC<RadioToggleProps> = (props): ReactElement => {\r\n    const { callback, items: {value, name} } = props;\r\n    const [state, setState] = useState({})\r\n    const keys = Object.keys(state)[0]\r\n    \r\n    const handleClick = (e: React.MouseEvent<HTMLInputElement>) => {\r\n        const target: INameRadioToggleProp = e.currentTarget.value;\r\n        setState({\r\n            [target]: true\r\n        })\r\n    }\r\n\r\n    const styles = {\r\n        width: '20px',\r\n        height: '20px',\r\n        marginRight: '10px'\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {value.map((item, i)=> (\r\n            <label className=\"radio-container\" key={i}>\r\n                <input style={styles}\r\n                checked={keys === item ? true : false} \r\n                type=\"radio\" value={item} \r\n                onChange={e=>callback(e)} \r\n                onClick={e=>handleClick(e)}\r\n                />\r\n                {name[i]}\r\n                <span className=\"checkmark\"></span>\r\n            </label>\r\n        ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RadioToggle\r\n","import React, { ReactElement, useState } from 'react'\r\nimport styles from './CategorySelection.module.scss';\r\n\r\ninterface IAppProps {\r\n    categories: string[],\r\n    callback: Function\r\n}\r\n\r\nexport type IValueCategorySelectionProp = number;\r\n\r\nconst CategorySelection: React.FC<IAppProps> = (props): ReactElement => {\r\n    const { categories, callback } = props; \r\n    const [state, setState] = useState({})\r\n    const keys = Object.keys(state)[0];\r\n\r\n    const handleClick = (e: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\r\n        const target = e.currentTarget.innerText;\r\n        callback(e);\r\n        setState({\r\n            [target]: true\r\n        })\r\n        \r\n    }\r\n\r\n    return (\r\n        <ul className={styles.categoriesContainer}>\r\n            {/* mapping all categories */}\r\n            {categories.map((category, index) => (\r\n                <li \r\n                    key={index}\r\n                    onClick={e=>handleClick(e)} \r\n                    value={index + 9}\r\n                    className={keys === category ? styles.active : styles.default}\r\n                >{category}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default CategorySelection\r\n","import React, { ReactElement } from 'react'\r\nimport styles from './AmountSelection.module.scss'\r\n\r\ninterface IAppProps {\r\n    callback: Function\r\n}\r\n\r\nexport type IValueAmountSelectionProp = number;\r\n\r\nconst AmountSelection: React.FC<IAppProps> = (props): ReactElement => {\r\n    const { callback } = props;\r\n    return (\r\n        <div className={styles.container}>\r\n            <input onChange={e=>callback(e)} type=\"text\" placeholder=\"Amount\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AmountSelection\r\n","import { Dispatch } from \"react\";\r\nimport { SELECTION_FAIL, SELECTION_LOADING, SELECTION_SUCCESS, SelectionDispatchType } from \"./types/selection.types\";\r\nimport { QuestionsParams } from \"./types/questions.types\";\r\n\r\nexport const userQuestionTypeSelection = async (param: QuestionsParams) => (dispatch: Dispatch<SelectionDispatchType>) => {\r\n    try {\r\n        dispatch({\r\n            type: SELECTION_LOADING,\r\n        })        \r\n\r\n        // if success\r\n        dispatch({\r\n            type: SELECTION_SUCCESS,\r\n            payload: param\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SELECTION_FAIL,\r\n        })\r\n        console.log(error)\r\n    }\r\n}","import { QuestionsParams } from \"./questions.types\";\r\n\r\nexport const SELECTION_LOADING = \"SELECTION_LOADING\";\r\nexport const SELECTION_SUCCESS = \"SELECTION_SUCCESS\";\r\nexport const SELECTION_FAIL = \"SELECTION_FAIL\";\r\n\r\ninterface Selection_Loading {\r\n    type: typeof SELECTION_LOADING,\r\n}\r\n\r\ninterface Selection_Success {\r\n    type: typeof SELECTION_SUCCESS,\r\n    payload: QuestionsParams\r\n}\r\n\r\ninterface Selection_Fail {\r\n    type: typeof SELECTION_FAIL,\r\n}\r\n\r\nexport type SelectionDispatchType = Selection_Loading | Selection_Success | Selection_Fail","import React, { ReactElement, useState } from 'react'\r\nimport styles from './DifficultySelection.module.scss'\r\n\r\ninterface IAppProps {\r\n    items: string[],\r\n    callback: Function\r\n}\r\n\r\nconst DifficultySelection: React.FC<IAppProps> = (props): ReactElement => {\r\n    const { items, callback } = props;\r\n    const [state, setState] = useState({});\r\n    const keys = Object.keys(state)[0];\r\n\r\n    const handleClick = (e: React.FormEvent<HTMLLIElement>) => {\r\n       const name = e.currentTarget.innerText;\r\n       callback(name);\r\n       setState({\r\n           [name]: true\r\n       })\r\n    }   \r\n\r\n    return (\r\n        <div className={styles.difficulty}>\r\n            <ul>\r\n                {\r\n                    items.map((item, i) => (\r\n                        <li \r\n                            key={i} \r\n                            \r\n                            onClick={e=> handleClick(e)} //passing event props to parent\r\n                            className={keys === item ? styles.active : styles.notActive}\r\n                        >{item}</li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DifficultySelection\r\n","import { QuestionsParams } from \"./Actions/types/questions.types\";\r\nimport { QuestionSessionStorage } from \"./components/QuestionsPage/QuestionsPage\";\r\n\r\nexport const QuestionSelectionValidation = (params: QuestionsParams): boolean => {\r\n    if(!params.amount || !params.category || !params.difficulty || !params.selectionType) {\r\n        return true //set is completed to be disabled\r\n    } return false //set is completed to enabled\r\n}\r\n\r\nexport const setQuestionInSession = (loading: boolean, questions: any): void => { // set the question in the session\r\n    const data: QuestionSessionStorage = {loading, questions}\r\n    sessionStorage.setItem('Questions', JSON.stringify(data))\r\n}\r\n\r\nexport const getQuestionInSession = () => { // Get the question in the session\r\n    const data: string | any = sessionStorage.getItem('Questions'); // assignment data need types\r\n    let result: QuestionSessionStorage = JSON.parse(data); // parsing data\r\n    return result\r\n}\r\n\r\nexport const checkUserAnswer = (value: string, correct: string | undefined) => { //Check user answer\r\n    if(value === correct) {\r\n        return true;\r\n    } return false;\r\n}\r\n\r\nexport const setScoreInSession = (score: number) => { // save the score to session\r\n    sessionStorage.setItem('Current Score', JSON.stringify(score));\r\n}\r\n\r\nexport const getScoreInSession = () => {\r\n    const data: number | any = sessionStorage.getItem('Current Score');\r\n    let result: number = JSON.parse(data);\r\n    return result\r\n}","import { Dispatch } from \"react\";\r\n\r\nexport const isSelectionSuccess =  async (result: boolean) => (dispatch: Dispatch<Selection_Succeeded>) => {\r\n    try {\r\n        dispatch({\r\n            type: SELECTION_SUCCEEDED,\r\n            payload: result            \r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const SELECTION_SUCCEEDED = 'SELECTION_SUCCEEDED';\r\nexport interface Selection_Succeeded {\r\n    type: typeof SELECTION_SUCCEEDED,\r\n    payload: boolean\r\n}","import { Dispatch } from 'redux';\r\nimport { FetchQuestionsDispatchTypes, FETCH_QUESTIONS_LOADING, FETCH_QUESTIONS_SUCCESS, FETCH_QUESTIONS_FAIL, QuestionsParams } from './types/questions.types';\r\nimport Axios from 'axios';\r\n\r\nexport const fetchQuestions = (param: QuestionsParams) => async (dispatch: Dispatch<FetchQuestionsDispatchTypes>) => {\r\n    try {\r\n       dispatch({\r\n           type: FETCH_QUESTIONS_LOADING\r\n       })\r\n\r\n        //done loading    \r\n       const endpoint = `https://opentdb.com/api.php?amount=${param.amount}&category=${param.category}&difficulty=${param.difficulty}&type=${param.selectionType}`\r\n       const { data: { results } } = await Axios.get(endpoint);\r\n       dispatch({\r\n           type: FETCH_QUESTIONS_SUCCESS,\r\n           payload: results\r\n       })\r\n\r\n    } catch (error) {\r\n        // fetching questions failed\r\n       dispatch({\r\n           type: FETCH_QUESTIONS_FAIL\r\n       }) \r\n       console.log(error)\r\n    }\r\n}","import React, { ReactElement, useState, useEffect } from 'react'\r\nimport styles from './Startpage.module.scss';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\n// contents\r\nimport { Items, categoriesContent, difficultiesContent } from './content/selection.content';\r\n\r\n// toggle component\r\nimport RadioToggle from '../RadioToggle/RadioToggle';\r\n\r\nimport QuestionMarkImage from '../../assets/images/question-mark.svg'\r\nimport CategorySelection, { IValueCategorySelectionProp } from '../CategorySelection/CategorySelection';\r\nimport AmountSelection, { IValueAmountSelectionProp } from '../AmountSelection/AmountSelection';\r\nimport { userQuestionTypeSelection } from '../../Actions/selection.action';\r\nimport { QuestionsParams, Difficulty, SelectionType } from '../../Actions/types/questions.types';\r\nimport DifficultySelection from '../DifficultySelection/DifficultySelection';\r\nimport { QuestionSelectionValidation, setQuestionInSession } from '../../util';\r\nimport { isSelectionSuccess } from '../../Actions/isSelectionSuccess.action';\r\nimport { fetchQuestions } from '../../Actions/questions.action';\r\nimport { RootStore } from '../../Store';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IAppProps {}\r\n\r\nconst Startpage: React.FC<IAppProps> = (): ReactElement => {\r\n    const dispatch = useDispatch();\r\n    const {questions,loading} = useSelector((state: RootStore) => state.questions)\r\n    const [isNotCompleted, setisNotCompleted] = useState(true) //Starting trivia\r\n\r\n    // 3 states for selection before starting trivia\r\n    const [amountSelected, setAmountSelected] = useState<IValueAmountSelectionProp | undefined>(undefined); // state for amount entered\r\n    const [categorySelected, setCategorySelected] = useState<IValueCategorySelectionProp | undefined>(undefined); // State for the number selected\r\n    const [difficultySelected, setDifficultySelected] = useState<Difficulty | undefined>(undefined) // state for selected difficulty\r\n    const [typeSelected, setTypeSelected] = useState<SelectionType | undefined>(undefined); // state for the type selected in radio\r\n    \r\n    const selectedChallenge: QuestionsParams = {\r\n        amount: amountSelected,\r\n        category: categorySelected,\r\n        difficulty: difficultySelected,\r\n        selectionType: typeSelected\r\n    }\r\n    \r\n    const amountEntered = (e: React.ChangeEvent<HTMLInputElement>) => { //callback for selecting amount\r\n        const target = e.currentTarget.value;\r\n        setAmountSelected(parseInt(target, 10))\r\n    }\r\n    \r\n    const selectCategory = (e: React.MouseEvent<HTMLLIElement, MouseEvent>) => { //callback to selecting category\r\n        setCategorySelected(e.currentTarget.value);\r\n    }\r\n\r\n    const selectDifficulty = (e: string) => { //callback for selecting difficulty\r\n        const name = e;\r\n        if(name === 'easy') {\r\n            return setDifficultySelected(Difficulty.EASY)\r\n        } else if (name === 'medium') {\r\n            return setDifficultySelected(Difficulty.MEDIUM)\r\n        } else {\r\n            setDifficultySelected(Difficulty.HARD)\r\n        } \r\n     } \r\n    \r\n    const selectType = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const target = e.currentTarget.value; //this is the value selected in radio buttons\r\n    \r\n        if(target === 'multiple') {\r\n            return setTypeSelected(SelectionType.MULTIPLE)\r\n        } return setTypeSelected(SelectionType.BOOL)\r\n    }\r\n\r\n    // handling user select\r\n    const handleSubmitClick = async () => {\r\n        try {\r\n            // perform action\r\n            const params = await userQuestionTypeSelection(selectedChallenge)\r\n            dispatch(params)\r\n\r\n            // update isSelectionSuccess action to true\r\n            const isSuccess = await isSelectionSuccess(!isNotCompleted);\r\n            dispatch(isSuccess)\r\n\r\n            // fetch the question through the given params\r\n            const query = await fetchQuestions(selectedChallenge);\r\n            dispatch(query)\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // validate inputs\r\n        const validate = async () => {\r\n            try {\r\n                const validateInputs = await QuestionSelectionValidation(selectedChallenge);\r\n                setisNotCompleted(validateInputs);\r\n            } catch (error) {\r\n                setisNotCompleted(true)    \r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        validate()\r\n    }, [amountSelected, categorySelected, difficultySelected, typeSelected, selectedChallenge])\r\n\r\n    // storing questions to session\r\n    useEffect(() => {\r\n        const setDataSession = async() => {\r\n            await setQuestionInSession(loading, questions);\r\n        }\r\n        setDataSession();\r\n    }, [questions, loading]) // run this once we have questions\r\n\r\n    \r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {/* selection */}\r\n            <div className={styles.selection}>\r\n                \r\n                <div className={styles.categories}>\r\n                    <h2>Categories</h2>\r\n                    <div>\r\n                        <CategorySelection callback={selectCategory} categories={categoriesContent}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.difficulty}>\r\n                    <DifficultySelection callback={selectDifficulty} items={difficultiesContent}/>\r\n                </div>\r\n                \r\n                <div className={styles.types}>\r\n                    <h2>Types</h2>\r\n                    <div className={styles.typesContainer}>\r\n                        {/* radio button toggle component */}\r\n                        <RadioToggle callback={selectType} items={Items}/>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.amount}>\r\n                    <h2>Number <br/>of Questions</h2>\r\n                    <AmountSelection callback={amountEntered}/>\r\n                </div>\r\n                <div className={styles.button}>\r\n                    <button disabled={isNotCompleted} onClick={handleSubmitClick} className=\"primary-button\">\r\n                        <Link to=\"/questions\">Start trivia</Link>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Image */}\r\n            <div className={styles.contentImage}>\r\n                <img src={QuestionMarkImage} alt=\"undraw.co\"/>\r\n            </div>\r\n\r\n            {/* Sidebar */}\r\n            <div className={styles.sidebar}>\r\n                <Sidebar />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Startpage","import React, { useState } from 'react'\r\nimport styles from './Question.module.scss'\r\n\r\ninterface IQuestionAppProps {\r\n    category: string,\r\n    answers: string[],\r\n    question: string,\r\n    callback: Function\r\n}\r\n\r\nconst Question: React.FC<IQuestionAppProps> = (props) => {\r\n    const { category, answers, question, callback } = props;\r\n    const [state, setState] = useState<string | null>(null)\r\n    const [defaultIndex, setDefaultIndex] = useState<number | null>(0); // default selection index\r\n    \r\n    const handleClick = (e: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\r\n        const value = e.currentTarget.getAttribute('data-aria'); //get the data attribute\r\n        setState(value)\r\n        setDefaultIndex(null); // once user clicked, turn off default selection\r\n        callback(value) // call the callback\r\n        //to pass value to parent\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <span className={styles.category}>{category}</span>\r\n            <h1 dangerouslySetInnerHTML={{__html: question}} /> \r\n            <ul className={styles.choices}>\r\n                {answers.map((item, index) => (\r\n                    <li className={item === state || index === defaultIndex ? styles.active : styles.default} key={index} onClick={e=>handleClick(e)} data-aria={item}>\r\n                        <span>{index === 0 ? 'A' : index === 1 ? 'B' : index === 2 ? 'C' : 'D'}</span>\r\n                        <p dangerouslySetInnerHTML={{__html: item}} />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question\r\n","import { Dispatch } from \"react\";\r\n\r\nexport const ScoreAction = async (score: number) => (dispatch: Dispatch<ScoreDispatchTypes>) => {\r\n    try {\r\n        dispatch({\r\n            type: SAVE_SCORE_SUCCESS,\r\n            payload: score // dispatch the score to the reducer\r\n        })\r\n    } catch (error) {\r\n            console.log(error)        \r\n    }\r\n}\r\n\r\nexport const SAVE_SCORE_SUCCESS = 'SAVE_SCORE_SUCCESS';\r\n\r\ninterface save_score_success {\r\n    type: typeof SAVE_SCORE_SUCCESS,\r\n    payload: number\r\n}\r\n\r\nexport type ScoreDispatchTypes = save_score_success","import { Dispatch } from \"react\";\r\n\r\n// use to determine current index of the question\r\nexport const CurrentAction = async(currentIndex: number) => (dispatch: Dispatch<CurrentIndexDispatchTypes>) => {\r\n    try {\r\n        dispatch({\r\n            type: CURRENT_INDEX,\r\n            payload: currentIndex\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const CURRENT_INDEX = \"CURRENT_INDEX\";\r\ninterface current_index {\r\n    type: typeof CURRENT_INDEX,\r\n    payload: number\r\n}\r\n\r\nexport type CurrentIndexDispatchTypes = current_index","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styles from './NotAvailable.module.scss'\r\nconst NotAvailable = () => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <h2>There seems to be no<br/>Question this time :(</h2>\r\n            <div>\r\n                <button className=\"primary-button\" >\r\n                    <Link to=\"/selection\">Go back to selection</Link>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotAvailable\r\n","import React, { useEffect, useState } from 'react'\r\nimport styles from './QuestionsPage.module.scss'\r\nimport Sidebar from '../Sidebar/Sidebar'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Questions } from '../../Actions/types/questions.types'\r\nimport { getQuestionInSession, checkUserAnswer, setScoreInSession } from '../../util'\r\nimport Question from '../Question/Question';\r\nimport { ScoreAction } from '../../Actions/score.action'\r\nimport { CurrentAction } from '../../Actions/current.action'\r\nimport { RootStore } from '../../Store'\r\nimport NotAvailable from '../NotAvailable/NotAvailable'\r\n\r\nexport type QuestionSessionStorage = { //Session storage type used in setItem\r\n    loading: boolean,\r\n    questions?: Questions[]\r\n}\r\n\r\nconst QuestionsPage = () => {\r\n    const dispatch = useDispatch()\r\n    const [data, setData] = useState<QuestionSessionStorage | undefined>(undefined) // list of all data\r\n    const [answers, setAnswers] = useState<string[] | undefined>(undefined);\r\n    const [currentIndex, setCurrentIndex] = useState<number>(0); // means current number in the question\r\n    const [currentCorrectAnswer, setCurrentCorrectAnswer] = useState<string | undefined>(undefined)\r\n    const [isDone, setIsDone] = useState<boolean | undefined>(undefined);\r\n    const [currentScore, setCurrentScore] = useState<number>(0);\r\n    \r\n    const currentIndexAtQuestion = useSelector((state: RootStore) => state.currentIndexAtQuestion); // current index\r\n\r\n    useEffect(() => { // for fetching session   \r\n        // fetch the questions in session\r\n        const fetchSession = async() => {\r\n            const result = await getQuestionInSession();\r\n            setData(result) // set data of \r\n        }\r\n        fetchSession()\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n       if(!data) return;\r\n       if(!data.questions) return;\r\n       const { questions } = data;\r\n\r\n       const currentIndexDispatch = async () => {\r\n            const result = await CurrentAction(currentIndex)\r\n            dispatch(result); // dispatching the current index\r\n        }\r\n\r\n        // !important, check if we have questions left\r\n       if(questions.length >= currentIndexAtQuestion.currentIndex) {\r\n           const currentQuestion = questions[currentIndex];\r\n           if(!currentQuestion) return;\r\n           mapAnswers(currentQuestion); // map all answers in question\r\n           currentIndexDispatch()   \r\n       } return;\r\n\r\n   }, [data, currentIndex, dispatch])\r\n   \r\n   if(!data) return null; // check if we have data\r\n\r\n   const mapDataQuestions: any = (current: number): JSX.Element | null => { // map all the question\r\n        if(!data.questions) return null; // check if it exist\r\n        const { questions } = data; \r\n        const currentQuestion = questions[current]; // get current question based on 'currentIndex'\r\n        \r\n        if(!currentQuestion || !answers) return null; \r\n\r\n        return <Question // call Question component and pass all the values\r\n                    category={currentQuestion.category} \r\n                    answers={answers}\r\n                    question={currentQuestion.question}\r\n                    callback={handleClick}\r\n                />\r\n   }\r\n   \r\n    const mapAnswers = (question: Questions): null | void => {\r\n        const correctAnswer = question.correct_answer;\r\n        const incorrectAnswers = question.incorrect_answers.map(item => item);\r\n        if(!question && !correctAnswer && incorrectAnswers) return;\r\n        else {\r\n            setAnswers([...incorrectAnswers, correctAnswer]); // copy all incorrect answers and add correct answer\r\n            setCurrentCorrectAnswer(correctAnswer); // set current correct answer for value checking\r\n        } \r\n    }\r\n\r\n    // when user chooses an answer\r\n    const handleClick = (value: string): void => { \r\n        const done = checkUserAnswer(value, currentCorrectAnswer); // call check user function in util \r\n        setIsDone(done); // user clicked next question button\r\n    }\r\n\r\n    // when user clicked next\r\n    const handleNext = async() => {\r\n        setCurrentIndex(prev => prev + 1); //Move on to the next question\r\n        if(!isDone) return; // double check whether user clicked next question\r\n        \r\n        setCurrentScore(prev => prev + 1); // add + 1 to the score since it is correct\r\n        const saveTheScore = await ScoreAction(currentScore);        \r\n        dispatch(saveTheScore) // dispatch the current score\r\n\r\n        // save score in session + 1\r\n        setScoreInSession(currentScore);\r\n    }\r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.question}>\r\n                {/* Render questions */}\r\n                {!data.loading && data.questions && mapDataQuestions(currentIndex)}\r\n\r\n                {/* Render Error \"No Questions\" */}\r\n                {!data.loading && !data.questions && <NotAvailable />}\r\n            \r\n            </div>\r\n            {/* Visible props is checking whether we have questions available, if so, show button */}\r\n            <Sidebar next={handleNext} visible={data.questions ? true : false} score={currentScore}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionsPage","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface IGoBackButtonProps {\r\n    link?: string\r\n}\r\n\r\nconst GoBackButton: React.FC<IGoBackButtonProps> = (props) => {\r\n    const { link } = props;\r\n    return (\r\n        <button className=\"primary-button\" >\r\n            <Link to={link ? link : \"/selection\"}>Go back to selection</Link>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default GoBackButton\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootStore } from '../../Store'\r\nimport GoBackButton from '../GoBackButton/GoBackButton'\r\nimport Sidebar from '../Sidebar/Sidebar'\r\nimport styles from './Finished.module.scss'\r\nconst Finished = () => {\r\n    const {score} = useSelector((state: RootStore) => state.currentScore)\r\n    // console.log(currentScore)\r\n    return (\r\n        <div className={styles.container}>\r\n            <div>\r\n                <h4>{score >= 5 ? \"Congrats!\" : \"Better luck next time!\"}\r\n                    <br/>You got <span>{score}</span></h4>\r\n                <GoBackButton/>\r\n            </div>\r\n            <Sidebar score={score} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Finished\r\n","import React from 'react';\nimport './App.scss'\nimport { Startpage, QuestionsPage } from './components/index'\n\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { RootStore } from './Store';\nimport { getQuestionInSession } from './util';\nimport Finished from './components/Finished/Finished';\nimport NotAvailable from './components/NotAvailable/NotAvailable';\n\nconst App = () => {\n  const isSelectionSuccedded = useSelector((state: RootStore)=> state.isSelectionSuccess.success)\n  const data = getQuestionInSession(); // use this to check whether we have answered questions\n  const {currentIndex} = useSelector((state: RootStore) => state.currentIndexAtQuestion);\n  const {amount} = useSelector((state: RootStore) => state.selection);\n\n  const renderFinishOnceDone = () => {\n    if(!data) return null;   \n    else if (amount === (currentIndex + 1)) return <Finished/>\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Router>\n          <Switch>\n            <Route exact path={[\"/\", \"/quiz-app-2\", \"/selection\"]} component={Startpage}/>\n            <Route exact path={[\"/\", \"/quiz-app-2\"]}>\n              {isSelectionSuccedded ? <Redirect to=\"/question\"/>\n              : <Startpage/>}\n            </Route>\n            {renderFinishOnceDone()}\n            <Route path={[\"/questions\", \"/quiz-app-2\"]} component={QuestionsPage}/>\n            <Route path={[\"/404\", \"/quiz-app-2\"]} component={NotAvailable} />\n            \n          </Switch>  \n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { TestDispatchTypes, TEST_LOADING, testTodos, TEST_SUCCESS, TEST_FAIL } from \"../../Actions/types/test.action.types\"\r\n\r\n// interface or types is fine\r\ninterface InitialState {\r\n    loading: boolean,\r\n    testTodos?: testTodos[] // '?' means optional\r\n}\r\n\r\nconst initialState: InitialState = {\r\n    loading: false, \r\n    // don't need to write initial state\r\n    // because its '?'\r\n}\r\n\r\nconst testReducer = (state: InitialState = initialState, action: TestDispatchTypes) => {\r\n    switch(action.type) {\r\n        case TEST_FAIL: {\r\n            return {\r\n                loading: false\r\n            }\r\n        }\r\n        case TEST_LOADING : {\r\n            return {\r\n                loading: true\r\n            }\r\n        }\r\n        case TEST_SUCCESS: {\r\n            return {\r\n                loading: false,\r\n                testTodos: action.payload\r\n            }\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default testReducer","export const TEST_LOADING = \"TEST_LOADING\";\r\nexport const TEST_FAIL = \"TEST_FAIL\";\r\nexport const TEST_SUCCESS = \"TEST_SUCCESS\";\r\n\r\n\r\n// use interface \"whenever possible\"\r\ninterface Test_Loading { \r\n    type: typeof TEST_LOADING // types for constant variables\r\n}\r\ninterface Test_Fail {\r\n    type: typeof TEST_FAIL // types for constant variables\r\n}\r\ninterface Test_Success {\r\n    type: typeof TEST_SUCCESS, // types for constant variables\r\n    payload: testTodos[]\r\n}\r\n\r\n\r\nexport type testTodos = { // types for the results\r\n    userId: number,\r\n    id: number,\r\n    title: string,\r\n    completed: boolean\r\n}\r\n\r\n\r\n// merge all dispatch types\r\nexport type TestDispatchTypes = Test_Loading | Test_Fail | Test_Success","import { Questions, FetchQuestionsDispatchTypes, FETCH_QUESTIONS_FAIL, FETCH_QUESTIONS_LOADING, FETCH_QUESTIONS_SUCCESS } from \"../../Actions/types/questions.types\";\r\n\r\nexport type QuestionsStateTypes = {\r\n    loading: boolean,\r\n    questions?: Questions[]\r\n}\r\n\r\nconst initialState: QuestionsStateTypes = {\r\n    loading: false,\r\n}\r\n\r\nconst QuestionsReducer = (state: QuestionsStateTypes = initialState, action: FetchQuestionsDispatchTypes) => {\r\n    switch(action.type) {\r\n        case FETCH_QUESTIONS_LOADING: {\r\n            return {\r\n                loading: true\r\n            }\r\n        }\r\n        case FETCH_QUESTIONS_SUCCESS: {\r\n            return {\r\n                loading: false,\r\n                questions: action.payload\r\n            }\r\n        }\r\n        case FETCH_QUESTIONS_FAIL: {\r\n            return {\r\n                loading: false\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default QuestionsReducer","import { Difficulty, SelectionType } from \"../../Actions/types/questions.types\";\r\nimport { SelectionDispatchType, SELECTION_FAIL, SELECTION_SUCCESS, SELECTION_LOADING } from \"../../Actions/types/selection.types\";\r\n\r\ninterface InitialState {\r\n    amount: number,\r\n    category: number,\r\n    difficulty: Difficulty,\r\n    type: SelectionType,\r\n    loading: boolean\r\n}\r\n\r\nconst initialState: InitialState = {\r\n    amount: 10,\r\n    category: 9,\r\n    difficulty: Difficulty.EASY,\r\n    type: SelectionType.MULTIPLE,\r\n    loading: false\r\n}\r\n\r\nexport const SelectionReducer = (state: InitialState = initialState, action: SelectionDispatchType) => {\r\n    switch(action.type) {\r\n        case SELECTION_LOADING: {\r\n            return {\r\n                loading: true\r\n            }\r\n        }\r\n        case SELECTION_SUCCESS: {\r\n            return {\r\n                state: action.payload,\r\n                loading: false\r\n            }\r\n        }\r\n        case SELECTION_FAIL: {\r\n            return {\r\n                \r\n                loading: false\r\n            }\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { Selection_Succeeded, SELECTION_SUCCEEDED } from \"../../Actions/isSelectionSuccess.action\"\r\n\r\ninterface InitialStateType {\r\n    success: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    success: false\r\n}\r\n\r\nexport const isSelectionSuccessReducer = (state: InitialStateType = initialState, action: Selection_Succeeded) => {\r\n    switch(action.type) {\r\n        case SELECTION_SUCCEEDED: {\r\n            return {\r\n                success: action.payload\r\n            }\r\n        }\r\n\r\n        default: \r\n            return state\r\n    }\r\n}","import { ScoreDispatchTypes, SAVE_SCORE_SUCCESS } from \"../../Actions/score.action\";\r\n\r\ninterface IScoreReducerState {\r\n    score: number\r\n}\r\n\r\nconst initialState: IScoreReducerState = {\r\n    score: 0\r\n}\r\n\r\nexport const scoreReducer = (state: IScoreReducerState = initialState, action: ScoreDispatchTypes) => {\r\n    switch(action.type) {\r\n        case SAVE_SCORE_SUCCESS: {\r\n            return {\r\n                score: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import { CurrentIndexDispatchTypes, CURRENT_INDEX } from \"../../Actions/current.action\"\r\n\r\ninterface ICurrentReducerState {\r\n    currentIndex: number\r\n}\r\nconst initialState = {currentIndex: 0}\r\nexport const currentReducer = (state: ICurrentReducerState = initialState, action: CurrentIndexDispatchTypes) => {\r\n    switch(action.type) {\r\n        case CURRENT_INDEX: {\r\n            return {\r\n                currentIndex: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n} ","import { combineReducers } from 'redux';\r\nimport testReducer from './test/test.reducer';\r\nimport QuestionsReducer from './questions/questions.reducer';\r\nimport { SelectionReducer } from './questions/selections.reducer';\r\nimport { isSelectionSuccessReducer } from './questions/isSelectionSuccess.reducer';\r\nimport { scoreReducer } from './questions/score.reducer';\r\nimport { currentReducer } from './questions/current.reducer';\r\n\r\nconst RootReducer = combineReducers({\r\n    test: testReducer,\r\n    questions: QuestionsReducer,\r\n    selection: SelectionReducer,\r\n    isSelectionSuccess: isSelectionSuccessReducer,\r\n    currentScore: scoreReducer,\r\n    currentIndexAtQuestion: currentReducer\r\n})\r\n\r\nexport default RootReducer  ","import { createStore, applyMiddleware } from 'redux';\r\nimport RootReducer from './Reducers/RootReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst Store = createStore(RootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\n// root reducer type\r\nexport type RootStore = ReturnType<typeof RootReducer>;\r\n\r\nexport default Store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport Store from './Store';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}